//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан по шаблону.
//
//     Изменения, вносимые в этот файл вручную, могут привести к непредвиденной работе приложения.
//     Изменения, вносимые в этот файл вручную, будут перезаписаны при повторном создании кода.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Pizza.Database
{
    using System;
    using System.Collections.Generic;
    
    public partial class Order
    {
        public int OrderID { get; set; }
        public int PizzaAssortimentID { get; set; }
        public int ClientID { get; set; }
        public string AdressStreet { get; set; }
        public int AdressHouse { get; set; }
        public string AdressApartment { get; set; }
        public System.DateTime OrderDate { get; set; }
        public int PizzaCount { get; set; }
        public Nullable<decimal> FinalCost { get; set; }
    
        public virtual Client Client { get; set; }
        public string ClientFullName
        {
            get => $"{Client.SecondName} {Client.FirstName} {Client.MiddleName}";
        }
        public string ClientInfo
        {
            get => $"Телефон: {Client.Phone} | Адрес: {AdressStreet}, {AdressHouse}, {AdressApartment}";
        }

        public virtual PizzaAssortiment PizzaAssortiment { get; set; }
        public string PizzaInfo
        {
            get => $"Пицца: {PizzaAssortiment.Pizza.PizzaName} {PizzaAssortiment.PizzaSize.Size}, количество: {PizzaCount}";
        }

        //Стоимость заказа без скидки
        public decimal OrderCost
        {
            get => PizzaAssortiment.Cost * (decimal)PizzaCount;
        }

        public int Discount
        {
            get
            {
                if (OrderCost > 2000)
                {
                    if (OrderCost > 4000)
                        return 7;
                    return 5;
                }
                return 0;
            }
        }

        //Стоимость заказа со скидкой
        public decimal CountFinalCost 
        { 
            get => OrderCost - (OrderCost * ((decimal)Discount / (decimal)100)); 
        }
    }
}
